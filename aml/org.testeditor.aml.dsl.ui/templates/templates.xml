<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<templates>
<template id="Component.newWithIncludes" autoinsert="true" context="org.testeditor.aml.dsl.Aml.Component" deleted="false" description="Create a new component with an include" enabled="true" name="component with includes">component ${name} includes ${parent:CrossReference('Component.parents')} {&#13;
	${cursor}&#13;
}</template>
<template id="Component.newWithType" autoinsert="true" context="org.testeditor.aml.dsl.Aml.Component" deleted="false" description="Create a new component with a type" enabled="true" name="component with type">component ${name} is ${type:CrossReference('Component.type')} {&#13;
	${cursor}&#13;
}</template>
<template id="ComponentElement.new" autoinsert="true" context="org.testeditor.aml.dsl.Aml.ComponentElement" deleted="false" description="Create a new element" enabled="true" name="element">element ${name} is ${type} {&#13;
	locator ="${locator}"&#13;
	${cursor}&#13;
}</template>
<template id="ComponentType.new" autoinsert="true" context="org.testeditor.aml.dsl.Aml.ComponentType" deleted="false" description="Create a new component type" enabled="true" name="component type">component type ${name} {&#13;
	interactions = ${cursor}&#13;
}</template>
<template id="ComponentElementType.new" autoinsert="true" context="org.testeditor.aml.dsl.Aml.ComponentElementType" deleted="false" description="Create a new element type" enabled="true" name="element type">element type ${name} {&#13;
	interactions = ${cursor}&#13;
}</template>
<template id="InteractionType.new" autoinsert="true" context="org.testeditor.aml.dsl.Aml.InteractionType" deleted="false" description="Create a new interaction type" enabled="true" name="interaction type">interaction type ${name} {&#13;
	template = "${cursor}"&#13;
}</template>
<template id="ValueSpace.Strings" autoinsert="true" context="org.testeditor.aml.dsl.Aml.ValueSpace" deleted="false" description="Create a new value space with an Integer range" enabled="true" name="value-space (Integer)">value-space ${name} = ${from} .. ${to}</template>
<template id="ValueSpace.IntRange" autoinsert="true" context="org.testeditor.aml.dsl.Aml.ValueSpace" deleted="false" description="Create a new value space with a list of Strings" enabled="true" name="value-space (Strings)">value-space ${name} = #[ "${cursor}" ]</template>
</templates>