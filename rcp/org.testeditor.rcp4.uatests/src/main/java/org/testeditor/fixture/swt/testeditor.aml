package org.testeditor.fixture.swt

import org.testeditor.fixture.eclipse.*
import org.testeditor.fixture.swt.ViewLocatorStrategy
import org.testeditor.fixture.swt.SWTLocatorStrategy

interaction type createSimpleProject {
	template = "Create simple project"
	method = TestEditorFixture.createDemoProject
}

interaction type cleanWorkspace {
	template = "Clean Workspace"
	method = TestEditorFixture.cleanWorkspace
}

interaction type saveUI {
	template = "Save UI State"
	method = TestEditorFixture.saveUI
}

interaction type resetUI {
	template = "Reset UI State"
	method = TestEditorFixture.resetUI
}

interaction type isValidTestProject {
	template = "Check if" ${projectName} "is a valid testproject"
	method = TestEditorFixture.isValidProject(projectName)
}

interaction type containsWorkspaceFileText {
	template = "Contains file" ${filePath} "this" ${searchText}
	method = TestEditorFixture.containsWorkspaceFileText(filePath, searchText)
}

component type TestEditorApp {
	interactions = createSimpleProject, saveUI, resetUI, cleanWorkspace, isValidTestProject, containsWorkspaceFileText, screenshot
}

component MainWindow is Workbench {
	element ProjektBaum is View locate by ViewLocatorStrategy.TITLE "Test Project Explorer"
	element TestStepSelector is View locate by ViewLocatorStrategy.TITLE "Test Step Selector"
	element JUnitView is View locate by ViewLocatorStrategy.ID "org.eclipse.jdt.junit.ResultView"
}

value-space projectmenues = #[ "New/Project...", "Open", "Run test", "Rename...", "New/Test Case", "New/Application Mapping" ]

component ProjectExplorer is General {
	element ProjectTree is TreeView locate by SWTLocatorStrategy.LABEL "Test Project Explorer"
		executeContextMenuEntry.item restrict to projectmenues
}

component TestEditorServices is TestEditorApp {
}

component Workbench is Workbench {
}

component ActiveEditor is TextEditor {
}

component NewProjectDialog is Dialog {
	element ProjectType is Tree locate by SWTLocatorStrategy.SINGLE ""
	element NextButton is Button locate by SWTLocatorStrategy.LABEL "&Next >"
	element FinishButton is Button locate by SWTLocatorStrategy.LABEL "&Finish"
	element ProjectName is Text locate by SWTLocatorStrategy.SINGLE ""
	element AddFixtureButton is Button locate by SWTLocatorStrategy.ID "NEW_DIALOG_ADD_SELECTED_FIXTURE"
	element AvailableFixturesList is List locate by SWTLocatorStrategy.ID "NEW_DIALOG_AVAILABLE_FIXTURE_LIST"
	element GenerateWithExamples is CheckBox locate by SWTLocatorStrategy.ID "NEW_DIALOG_GENERATE_WITH_EXAMPLES"
	element BuildTool is Combobox locate by SWTLocatorStrategy.ID "NEW_DIALOG_BUILD_TOOL_COMBO"
}

component NewTestCaseDialog is Dialog {
	element TestCaseName is Text locate by SWTLocatorStrategy.LABEL "File name:"
	element NextButton is Button locate by SWTLocatorStrategy.LABEL "&Next >"
	element FinishButton is Button locate by SWTLocatorStrategy.LABEL "&Finish"
}

component RenameDialog is Dialog {
	element ElementName is Text locate by SWTLocatorStrategy.SINGLE ""
	element OK is Button locate by SWTLocatorStrategy.LABEL "OK"
}